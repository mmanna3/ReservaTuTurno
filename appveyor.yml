version: 1.0.{build}
image: Visual Studio 2022
branches:
  only:
    - main
environment:
  deploy_username:
    secure: ZumRpgIeGcRgW3H7yXK0bQ==
  deploy_password:
    secure: SFAvHfsz398LTl83QbS5gw==
  deploy_server:
    secure: 9iCJXN3fcB5DufZMg1zVf3xhH5vWLdZxDXFZ1ttdGejbuBldZQQznbF4XXbmX7UnlHDOdIXo7EBb2MQOHqRXdpsKmn7qrcpWoukzYxFB9phYlSqFXRowjeFNDjAPAaFs
  deploy_website:
    secure: RjlovvhfNwCqtGz5G8sg1vIF6BAY7ICmuiGmTtFjV/Y=
  db_server:
    secure: GENtSiIHJlcMVdOs9CjeQw==
  db_name:
    secure: t+vaJXx7FxW8zs+EoSWKiX2FAp/4kl8Alb7m7n+oVP8=
  db_username:
    secure: t+vaJXx7FxW8zs+EoSWKiX2FAp/4kl8Alb7m7n+oVP8=
  db_password:
    secure: DB/5MuvV4BAV3neZnx3j6w==
install:
  - ps: >-
      $file = "./ReservaTuTurnoApi/Api/appsettings.Production.json";
      (Get-Content $file).Replace("{db_server}", $env:db_server).Replace("{db_name}", $env:db_name).Replace("{db_username}", $env:db_username).Replace("{db_password}", $env:db_password) | Set-Content $file  
# Instala para generar dtos a partir del backend
  - dotnet tool install swashbuckle.aspnetcore.cli -g
  - dotnet tool install nswag.consolecore -g
  - dotnet --version
before_build:
  # Genera dtos en PWA a partir del backend (buildeado antes para los tests)
  - cd ReservaTuTurnoApi/Api
  - dotnet build --configuration Release --runtime win-x64
  - swagger tofile --output swagger.json bin/Release/net8.0/win-x64/Api.dll v1
  - nswag openapi2tsclient /input:swagger.json /output:./../../ReservaTuTurnoPWA/src/api/clients.ts
  - cd ../..  
  # Compila la PWA
  - npm install --global yarn
  - cd ReservaTuTurnoPWA
  - yarn install
  - yarn build
  - cd ..
  - ps: >-
      Copy-Item -Path "./ReservaTuTurnoPWA/dist" -Destination "./ReservaTuTurnoAPI/Api/wwwroot" -Recurse
build_script:
  - cmd: dotnet publish --framework net8.0 /p:EnvironmentName=Production --self-contained true -r win-x64 Api --output %appveyor_build_folder%\dist
test_script:  
  # Ejecuta tests
  - cd ReservaTuTurnoApi
  - dotnet test --configuration Release --runtime win-x64
before_deploy:
  # Aplica migraciones pendientes
  - dotnet tool install dotnet-ef --global --version 8.0.0
  - cd ReservaTuTurnoApi/Api
  - ps: $DefaultConnectionString = (Get-Content appsettings.Production.json | ConvertFrom-Json).ConnectionStrings.Default
  # - ps: $DefaultConnectionString
  - ps: dotnet ef database update --connection $DefaultConnectionString
artifacts:
  - path: dist
deploy:
  - provider: WebDeploy
    remove_files: true
    skip_dirs: \\App_Data;\\logs;\\aspnet_client;
    server: $(deploy_server)
    website: $(deploy_website)
    username: $(deploy_username)
    password: $(deploy_password)
    ntlm: false